Index: src/medCheck/dao/impl/DoctorServiceImplDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package medCheck.dao.impl;\r\n\r\nimport medCheck.dao.DoctorServiceDao;\r\nimport medCheck.database.Database;\r\nimport medCheck.model.Department;\r\nimport medCheck.model.Doctor;\r\nimport medCheck.model.Hospital;\r\n\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.stream.Collectors;\r\nimport java.util.stream.Stream;\r\n\r\npublic class DoctorServiceImplDao implements DoctorServiceDao {\r\n\r\n    Database database = new Database();\r\n    Map<Long,Doctor>doctors;\r\n    @Override\r\n    public String addDoctorToHospital(Long id, Doctor doctor) {\r\n        Hospital hospital = database.getHospitals().stream()\r\n                .filter(h -> h.getId().equals(id))\r\n                .findFirst()\r\n                .orElse(null);\r\n        if (hospital == null) {\r\n            return \"Hospital not found!\";\r\n        }\r\n        doctor.setId(doctor.getId());\r\n        hospital.getDoctors().add(doctor);\r\n        doctors.put(doctor.getId(), doctor);\r\n        return \"Doctor added to hospital successfully.\";\r\n    }\r\n\r\n    @Override\r\n    public Doctor findDoctorById(Long id) {\r\n        return  doctors.get(id);\r\n    }\r\n\r\n    @Override\r\n    public String updateDoctor(Long id, Doctor doctor) {\r\n        if (!doctors.containsKey(id)) {\r\n            return \"Doctor not found!\";\r\n        }\r\n            doctor.setId(id);\r\n            doctors.put(id, doctor);\r\n            return \"Doctor updated successfully\";\r\n\r\n    }\r\n    @Override\r\n    public void deleteDoctorById(Long id) {\r\n        doctors.remove(id);\r\n        database.getHospitals().stream()\r\n                .flatMap(d->d.getDepartments().\r\n                        stream()).forEach(i->i.getDoctors().removeIf(doctor -> doctor.getId().equals(id)));\r\n\r\n    }\r\n\r\n    @Override\r\n    public String assignDoctorToDepartment(Long departmentId, List<Long> doctorsId) {\r\n        Department department =database.getHospitals().stream()\r\n            .flatMap(h -> h.getDepartments().stream())\r\n            .filter(d -> d.getId().equals(departmentId))\r\n            .findFirst()\r\n            .orElse(null);\r\n        if (department == null) {\r\n            return \"Department not found!\";\r\n        }\r\n        List<Doctor> doctorsToAdd = doctorsId.stream()\r\n                .map(doctorId -> doctors.get(doctorId))\r\n                .toList();\r\n        department.getDoctors().addAll(doctorsToAdd);\r\n        return \"Doctors assigned to department successfully.\";\r\n    }\r\n\r\n    @Override\r\n    public List<Doctor> getAllDoctorsByHospitalId(Long id) {\r\n        return database.getHospitals().stream()\r\n                .filter(h -> h.getId().equals(id))\r\n                .flatMap(h -> h.getDoctors().stream())\r\n                .collect(Collectors.toList());\r\n    }\r\n\r\n    @Override\r\n    public List<Doctor> getAllDoctorsByDepartmentId(Long id) {\r\n        return database.getHospitals().stream()\r\n                .flatMap(h -> h.getDepartments().stream())\r\n                .filter(d -> d.getId().equals(id))\r\n                .flatMap(d -> d.getDoctors().stream())\r\n                .collect(Collectors.toList());\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/medCheck/dao/impl/DoctorServiceImplDao.java b/src/medCheck/dao/impl/DoctorServiceImplDao.java
--- a/src/medCheck/dao/impl/DoctorServiceImplDao.java	(revision 0f695739cc0ab31d4f619ec19ff0aca19b90fb40)
+++ b/src/medCheck/dao/impl/DoctorServiceImplDao.java	(date 1680682758619)
@@ -9,7 +9,7 @@
 import java.util.List;
 import java.util.Map;
 import java.util.stream.Collectors;
-import java.util.stream.Stream;
+
 
 public class DoctorServiceImplDao implements DoctorServiceDao {
 
@@ -87,5 +87,4 @@
                 .flatMap(d -> d.getDoctors().stream())
                 .collect(Collectors.toList());
     }
-
 }
\ No newline at end of file
